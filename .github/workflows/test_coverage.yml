name: Test coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  main:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-20.04 ]
        cc: [ gcc-10 ]
        cxx: [ g++-10 ]
        build_type: [ Debug ]
        cxx_standard: [ 17 ]

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run:
          sudo apt install ${{ matrix.cc }} ${{ matrix.cxx }} lcov

      - name: Configure CMake
        run:
          mkdir build &&
          cd build &&
          cmake ..
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_C_COMPILER=${{ matrix.cc }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
          -DYACLIB_BUILD_TESTING=ON
          -DYACLIB_BUILD_EXAMPLES=ON
          -DYACLIB_FAULT=ON
          -DYACLIB_ASSERT_FATAL=ON
          -DYACLIB_COVERAGE=ON
          -DYACLIB_CXX_STANDARD=${{ matrix.cxx_standard }}
          -DYACLIB_DEFINITIONS=/DNDEBUG

      - name: Build
        run:
          cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        run:
          cd build &&
          ctest --output-on-failure -C ${{ matrix.build_type }} -V

      - name: Collect lcov info
        run: |
          cd build
          lcov --rc lcov_branch_coverage=1 -d . -c                       -o lcov_cond.info
          lcov --rc lcov_branch_coverage=1 -r lcov_cond.info '/usr/*'    -o lcov_cond.info
          lcov --rc lcov_branch_coverage=1 -r lcov_cond.info '*/_deps/*' -o lcov_cond.info
          lcov --rc lcov_branch_coverage=1 -r lcov_cond.info '*/fault/*' -o lcov_cond.info
          lcov -r lcov_cond.info '*/test/*'  -o lcov.info
          lcov --rc lcov_branch_coverage=1 -r lcov_cond.info '*/test/*'  -o lcov_cond.info
          lcov --rc lcov_branch_coverage=1 --list lcov_cond.info

      - name: codecov
        uses: codecov/codecov-action@v2.0.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: build/lcov.info
